# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------

# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

# Index starts from 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
set-option -g repeat-time 500

# 256-color terminal
set-option -g default-terminal "screen-256color"

# Add truecolor support (tmux info | grep Tc)
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# Mouse
set-option -g mouse on

# Pane border colors
set-option -g pane-active-border-style fg=default
set-option -g pane-border-style fg='#d3d5d7'

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------

# Copy-mode
set-window-option -g mode-keys vi

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------

# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix "\"
bind-key \ split-window -h -c "#{pane_current_path}"

# prefix -
bind-key - split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -d -t :+
bind-key -r < swap-window -d -t :-

# Back and forth
bind-key bspace previous-window
bind-key space next-window

# Send command on double press
bind-key C-a send-keys C-a

# Clear scrollback buffer
bind-key C-l send-keys C-l \; clear-history

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Pane movement
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

# Resize panes by increments of 5
bind-key -r h resize-pane -L 5
bind-key -r j resize-pane -D 5
bind-key -r k resize-pane -U 5
bind-key -r l resize-pane -R 5

# Break pane into new window and keep focus on the current window
bind-key b break-pane -d

# Vertical 20% split
bind-key r split-window -h -p 20

# Copy/Paste support from tmux buffer to system buffer (clipboard)
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"

# Notes
bind-key C-n if-shell "tmux select-window -t NOTES" "" \
    "new-window -n NOTES 'nvim ~/Tresors/Documents/Notes/'; move-window -t 0" \

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# -------------------------------------------------------------------
# Status bar
# -------------------------------------------------------------------

set-option -g status-bg '#f0f0f0'

# Status anchor
set-option -g status-justify left
set-option -g status-left-length 16
set-option -g status-left '#[fg=#5c6773]#[bg=#d3d5d7] #S '

# Right (time) anchor
set-option -g status-interval 60
set-option -g status-right '#[bg=#dee8f1]#[fg=#626d78] %a %R '

# Non-active status window
set-window-option -g window-status-format '#[fg=#626d78] #I #W '

# Active status window
set-window-option -g window-status-current-format '#[bg=#dee8f1]#[fg=#626d78] #I #W#F '

# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key t run-shell 'tmux send-keys -t #{pane_id} "$(tmux-fzf-words)"'
bind-key T run-shell 'tmux send-keys -t #{pane_id} "$(tmux-fzf-words --all)"'

# Select pane
bind-key 0 run-shell "tmux-fzf-panes || :"
